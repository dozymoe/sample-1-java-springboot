<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moe.dozy.demo.sample1.services.AuthorizationService">
    <select id="findAllUserRoles" parameterType="map" resultType="AuthRole">
        SELECT r.* FROM auth_roles AS r
        INNER JOIN auth_user_has_roles AS uhr
        ON r.id = uhr.role_id
        WHERE
            uhr.user_id = #{user.id}
            <if test="guard != null">
            AND r.guard_name = #{guard}
            </if>
        ORDER BY created_at DESC
    </select>

    <insert id="setUserRoles" parameterType="map">
        <choose>
            <when test="guard != null">
                DELETE FROM auth_user_has_roles
                INNER JOIN auth_roles AS r
                ON r.id = role_id
                WHERE
                    user_id = #{user.id}
                    AND r.guard_name = #{guard};
            </when>
            <otherwise>
                DELETE FROM auth_user_has_roles
                WHERE user_id = #{user.id};
            </otherwise>
        </choose>

        INSERT
        <if test="_databaseId == 'MySQL'">
            IGNORE
        </if>
        INTO auth_user_has_roles
            (user_id, role_id)
        VALUES
            <foreach item="role" collection="roles" separator=",">
            (#{user.id}, #{role.id})
            </foreach>
        <if test="_databaseId == 'postgresql'">
            ON CONFLICT DO NOTHING
        </if>
    </insert>

    <select id="findAllUserPermissions" parameterType="map" resultType="AuthPermission">
        SELECT p.* FROM auth_permissions AS p
        WHERE
            p.id IN
        (
            SELECT uhp.permission_id FROM auth_user_has_permissions AS uhp
            WHERE uhp.user_id = #{user.id}
            UNION DISTINCT
            SELECT rp.permission_id FROM auth_role_has_permissions AS rp
            INNER JOIN auth_user_has_roles AS uhr
            ON uhr.role_id = rp.role_id
            WHERE uhr.user_id = #{user.id}
        )
            <choose>
                <when test="guard != null">
                    AND p.guard_name = #{guard}
                </when>
                <otherwise>
                    AND p.guard_name = 'web'
                </otherwise>
            </choose>
        ORDER BY created_at DESC
    </select>

    <select id="findAllRolePermissions" parameterType="map" resultType="AuthPermission">
        SELECT p.* FROM auth_permissions AS p
        INNER JOIN auth_role_has_permissions AS rhp
        ON p.id = rhp.permission_id
        WHERE
            rhp.role_id = #{role.id}
            <choose>
                <when test="guard != null">
                    AND p.guard_name = #{guard}
                </when>
                <otherwise>
                    AND p.guard_name = 'web'
                </otherwise>
            </choose>
        ORDER BY created_at DESC
    </select>
</mapper>